# Generated by Django 2.2.1 on 2019-05-21 18:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challengeName', models.CharField(max_length=200, verbose_name='challengeName')),
                ('createdBy', models.CharField(max_length=200, verbose_name='createdBy')),
                ('challengeType', models.CharField(choices=[('Easy', 'EASY'), ('Medium', 'MEDIUM'), ('Hard', 'HARD')], default='Easy', max_length=7)),
                ('problemStatement', models.TextField(verbose_name='problemStatement')),
                ('inputFormat', models.TextField(verbose_name='inputFormat')),
                ('constraints', models.TextField(verbose_name='constraints')),
                ('outputFormat', models.TextField(verbose_name='outputFormat')),
                ('approach', models.TextField(verbose_name='approach')),
                ('problemSolution', models.TextField(verbose_name='problemSolution')),
                ('languages', multiselectfield.db.fields.MultiSelectField(choices=[('Python', 'PYTHON'), ('C', 'C'), ('C++', 'C++')], max_length=30)),
                ('maxScore', models.PositiveIntegerField(default=100, verbose_name='maxScore')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineContest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestName', models.CharField(max_length=200, verbose_name='contestName')),
                ('contestLink', models.CharField(max_length=200, verbose_name='contestLink')),
                ('contestType', models.CharField(choices=[('Hackathon', 'HACKATHON'), ('Competitive', 'COMPETITIVE')], default='hackathon', max_length=12)),
                ('startingDateTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='startingDateTime')),
                ('endingDateTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='endingDateTime')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestCases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testcaseName', models.CharField(max_length=20, verbose_name='testcaseName')),
                ('explanation', models.TextField(verbose_name='explanation')),
                ('input', models.TextField(verbose_name='input')),
                ('output', models.TextField(verbose_name='output')),
                ('score', models.PositiveIntegerField(verbose_name='score')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Challenge')),
            ],
        ),
        migrations.CreateModel(
            name='CampusContest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestName', models.CharField(max_length=200, verbose_name='contestName')),
                ('organizer', models.CharField(max_length=200, verbose_name='organizer')),
                ('contestType', models.CharField(choices=[('Hackathon', 'HACKATHON'), ('Competitive', 'COMPETITIVE')], default='Hackathon', max_length=12)),
                ('startingDateTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='startingDateTime')),
                ('endingDateTime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='endingDateTime')),
                ('description', models.TextField(verbose_name='description')),
                ('prizes', models.TextField(verbose_name='prizes')),
                ('rules', models.TextField(verbose_name='rules')),
                ('scoring', models.TextField(verbose_name='scoring')),
                ('challenge', models.ManyToManyField(related_name='challenge', to='home.Challenge')),
            ],
        ),
    ]
